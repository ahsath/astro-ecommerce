---
import Base from "../../../layouts/Base.astro";
import Filters from "../../../components/Filters.astro";
import ProductCard from "../../../components/ProductCard.astro";
import NextPageLink from "../../../components/NextPageLink.astro";
import PrevPageLink from "../../../components/PrevPageLink.astro";
import Footer from "../../../components/Footer.astro";

export async function getStaticPaths({ paginate }) {
  const resArray = await Promise.all([
    fetch(import.meta.env.PUBLIC_API_BASE_URL + '/tags'),
    fetch(import.meta.env.PUBLIC_API_BASE_URL + '/products')
  ])

  const [tags, products] = await Promise.all(resArray.map(res => res.json()))

  return tags.map(tag => {
    const filteredProducts = products.filter(product => product.tags.includes(tag.name))

    return paginate(filteredProducts, {
      params: { collectionId: tag.name },
      props: { title: tag.displayName },
      pageSize: 32
    })
  })
}

const products = Astro.props.page.data
const page = Astro.props.page
---

<Base>
<div class="container px-4 py-4">
  <div class="grid xl:grid-cols-product-listing">
    <section class="relative">
      <div class="xl:sticky top-16">
        <Filters />
      </div>
    </section>
    <div>
      <main class="flex flex-col gap-4 sm:gap-6">
        <header class="text-center">
          <h2 class="text-xs uppercase tracking-widest">Coleçāo</h2>
          <h1 class="text-xl tracking-widest uppercase font-bold sm:text-3xl mt-1">{Astro.props.title}</h1>
        </header>
        <div class="grid gap-x-1 gap-y-6 grid-cols-2 md:grid-cols-3 2xl:grid-cols-4">
          {products.map(product =>
          <ProductCard product={product} />)
          }
        </div>
        <div class="grid grid-cols-3 mt-16">
          <div class="mr-auto">
            {page.url.prev &&
            <PrevPageLink to={page.url.prev}>
              Anterior
            </PrevPageLink>
            }
          </div>
          <div class="text-xs text-neutral-500 uppercase tracking-widest self-center justify-self-center w-max">
            Mostrando {page.currentPage}-{page.lastPage} de {page.total}
          </div>
          <div class="ml-auto">
            {
            page.url.next &&
            <NextPageLink to={page.url.next}>
              Próxima
            </NextPageLink>
            }
          </div>
        </div>
      </main>
      <Footer class="pt-4" />
    </div>
    <section class="relative hidden xl:block">
      <div
        class="xl:sticky top-16 w-[160px] h-[600px] mx-auto bg-neutral-50 text-neutral-400 flex items-center justify-center">
        Ad</div>
    </section>
  </div>
</div>
</Base>